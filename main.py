from flask import Flask, request
import telebot
import os

TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –°–ø–∏—Å–æ–∫ –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤
bad_words = ['—Ö—É–π', '–ø–∏–∑–¥', '–±–ª—è–¥', '–µ–±–∞', '—Å–æ–≤–æ–∫', '—Å–∫—É—Ñ', '—à–ª—é—Ö–∞', '–Ω–∞—Ü–∏—Å—Ç', '—Ñ–∞—à–∏—Å—Ç', '–≥–æ–º–∏–∫']
shlyuhobot_keywords = ['–∏—â—É –ø–∞—Ä–Ω—è', '–∏—â—É –¥–µ–≤—É—à–∫—É', '–∑–∞—Ä–∞–±–æ—Ç–∞–π', '18+', '–∏—â—É —Å–µ–∫—Å', '–ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ']

# –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –ø—Å–µ–≤–¥–æ-–ò–ò: –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –æ—Ç–≤–µ—Ç—ã
pseudo_ai = {
    "–∫—Ç–æ —Ç—ã": "–Ø –ê—Å–º–æ–¥–µ–π üëπ, —Å—Ç—Ä–∞–∂ —á–∞—Ç–∞ –∏ –±–æ—Ä–µ—Ü —Å –Ω–µ–∞–¥–µ–∫–≤–∞—Ç–∞–º–∏.",
    "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å": "–Ø —Ñ–∏–ª—å—Ç—Ä—É—é –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –∏ —Ä–µ–∞–≥–∏—Ä—É—é –Ω–∞ –±–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã.",
    "–∫–∞–∫ –¥–µ–ª–∞": "–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –£ —Ç–µ–±—è –∫–∞–∫?",
    "–∑–∞—á–µ–º —Ç—ã –∑–¥–µ—Å—å": "–Ø –∑–∞—â–∏—â–∞—é —á–∞—Ç –æ—Ç —Ñ–ª—É–¥–∞ –∏ –Ω–µ—Ü–µ–Ω–∑—É—Ä—â–∏–Ω—ã."
}

@app.route('/' + TOKEN, methods=['POST'])
def getMessage():
    json_str = request.get_data().decode('UTF-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "!", 200

@app.route('/')
def webhook():
    bot.remove_webhook()
    bot.set_webhook(url=os.getenv("RENDER_EXTERNAL_URL") + TOKEN)
    return "!", 200

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    msg = message.text.lower()
    user_mentioned_bot = (
        message.chat.type == 'private' or
        ('–∞—Å–º–æ–¥–µ–π' in msg or '@' + bot.get_me().username.lower() in msg)
    )

    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤ ‚Äî —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –≤—Å–µ–≥–¥–∞
    if any(bad in msg for bad in bad_words):
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è üôè")
        return

    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–æ–≤/—Å–ø–∞–º–∞ ‚Äî —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –≤—Å–µ–≥–¥–∞
    if any(kw in msg for kw in shlyuhobot_keywords):
        bot.reply_to(message, "–û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –±–æ—Ç. –°–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∞–º.")
        return

    # –û—Å—Ç–∞–ª—å–Ω–æ–µ ‚Äî —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±–æ—Ç —É–ø–æ–º—è–Ω—É—Ç –∏–ª–∏ —ç—Ç–æ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if user_mentioned_bot:
        for key_phrase in pseudo_ai:
            if key_phrase in msg:
                bot.reply_to(message, pseudo_ai[key_phrase])
                return

        if "–ø—Ä–∏–≤–µ—Ç" in msg or "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π" in msg:
            bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –±–æ—Ç –ê—Å–º–æ–¥–µ–π üëπ")
        elif "–ø–æ–º–æ—â—å" in msg or "/help" in msg:
            bot.reply_to(message, "–Ø —É–º–µ—é —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —á–∞—Ç –æ—Ç –º–∞—Ç–∞, –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π, —Å–ø–∞–º–∞ –∏ –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è. –í –±—É–¥—É—â–µ–º –Ω–∞—É—á—É—Å—å –±–æ–ª—å—à–µ–º—É!")
        else:
            bot.reply_to(message, "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ... –Ø –ø–æ–¥—É–º–∞—é –Ω–∞–¥ —ç—Ç–∏–º ü§î")

if __name__ == "__main__":
    app.run(host='0.0.0.0', port=10000)
